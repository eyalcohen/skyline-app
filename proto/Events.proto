package event;
option java_package = "com.ridemission.events";
option java_outer_classname = "ProtoBuf";

message EventHeader {
 enum EventType {
   SENSOR_VALID = 0;	// Starts/stops when a sensor becomes available
   DRIVE_SESSION = 1;	// Starts/stops when the user begins/stops driving
   ACCELEROMETER = 2;  // Will include accel data
   LOCATION = 3;       // Will include location data
   ANNOTATION = 4;	// Will include annotation data
 }

 enum SourceType {
   SENSOR_ACCEL = 0;
   SENSOR_GPS = 1;
   SENSOR_CELLPOS = 2;	// Cell tower based position info
   UNKNOWN = 3;
 }

 required uint64 start_time = 1; // msecs since 1970
 optional uint64 stop_time = 2;
 required EventType type = 3;
 optional SourceType source = 4;
}

message LocationData {
 optional float latitude = 2;
 optional float longitude = 3;
 optional int32 altitude = 4;	// In meters
}

message AccelerometerData {
 optional float x = 2;	// Accel in Gs
 optional float y = 3;
 optional float z = 4;	
}

message AnnotationData {
 optional string message = 1;
}

message Event {
 required EventHeader header = 1;
 optional LocationData location = 2;
 optional AccelerometerData accelerometer = 3;
 optional AnnotationData annotation = 4;
}

message EventStream {
 required string vehicle_id = 1;
 repeated Event events = 2;
}