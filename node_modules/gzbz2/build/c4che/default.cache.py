AR = '/Developer/usr/bin/ar'
ARFLAGS = 'rcs'
CC = ['/Developer/usr/bin/gcc']
CCDEFINES_ST = '-D%s'
CCFLAGS = ['-g']
CCFLAGS_DEBUG = ['-g']
CCFLAGS_MACBUNDLE = ['-fPIC']
CCFLAGS_NODE = ['-D_LARGEFILE_SOURCE', '-D_FILE_OFFSET_BITS=64']
CCFLAGS_RELEASE = ['-O2']
CCLNK_SRC_F = ''
CCLNK_TGT_F = ['-o', '']
CC_NAME = 'gcc'
CC_SRC_F = ''
CC_TGT_F = ['-c', '-o', '']
CC_VERSION = ('4', '2', '1')
COMPILER_CC = 'gcc'
COMPILER_CXX = 'g++'
CPP = '/Developer/usr/bin/cpp'
CPPFLAGS_NODE = ['-D_GNU_SOURCE', '-DEV_MULTIPLICITY=0']
CPPPATH_NODE = '/Users/seth/app/include/node'
CPPPATH_ST = '-I%s'
CXX = ['/Developer/usr/bin/g++']
CXXDEFINES_ST = '-D%s'
CXXFLAGS = ['-g']
CXXFLAGS_DEBUG = ['-g']
CXXFLAGS_NODE = ['-D_LARGEFILE_SOURCE', '-D_FILE_OFFSET_BITS=64']
CXXFLAGS_RELEASE = ['-O2']
CXXLNK_SRC_F = ''
CXXLNK_TGT_F = ['-o', '']
CXX_NAME = 'gcc'
CXX_SRC_F = ''
CXX_TGT_F = ['-c', '-o', '']
DEST_CPU = 'x86_64'
DEST_OS = 'darwin'
FULLSTATIC_MARKER = '-static'
LIBDIR = '/Users/seth/bin/lib/node_modules:/Users/seth/app/protobuf-for-node/build/default'
LIBPATH_BZLIB = ['/opt/local/lib', '/usr/lib', '/usr/local/lib']
LIBPATH_NODE = '/Users/seth/app/lib'
LIBPATH_ST = '-L%s'
LIBPATH_ZLIB = ['/opt/local/lib', '/usr/lib', '/usr/local/lib']
LIB_BZLIB = ['bz2']
LIB_ST = '-l%s'
LIB_ZLIB = ['z']
LINKFLAGS_MACBUNDLE = ['-bundle', '-undefined', 'dynamic_lookup']
LINK_CC = ['/Developer/usr/bin/gcc']
LINK_CXX = ['/Developer/usr/bin/g++']
NODE_PATH = '/Users/seth/bin/lib/node_modules:/Users/seth/app/protobuf-for-node/build/default'
PREFIX = '/usr/local'
PREFIX_NODE = '/Users/seth/app'
RANLIB = '/Developer/usr/bin/ranlib'
RPATH_ST = '-Wl,-rpath,%s'
SHLIB_MARKER = ''
SONAME_ST = ''
STATICLIBPATH_ST = '-L%s'
STATICLIB_MARKER = ''
STATICLIB_ST = '-l%s'
cxxflags = ['-D_FILE_OFFSET_BITS=64', '-D_LARGEFILE_SOURCE', '-Wall', '-mmacosx-version-min=10.4', '-O2']
defines = ['WITH_GZIP', 'WITH_BZIP']
includes = ['/opt/local/include', '/usr/include', '/usr/local/include']
libpath = ['/opt/local/lib', '/usr/lib', '/usr/local/lib']
macbundle_PATTERN = '%s.bundle'
program_PATTERN = '%s'
shlib_CCFLAGS = ['-fPIC', '-compatibility_version', '1', '-current_version', '1']
shlib_CXXFLAGS = ['-fPIC', '-compatibility_version', '1', '-current_version', '1']
shlib_LINKFLAGS = ['-dynamiclib']
shlib_PATTERN = 'lib%s.dylib'
staticlib_LINKFLAGS = []
staticlib_PATTERN = 'lib%s.a'
uselibs = ['ZLIB', 'BZLIB']
